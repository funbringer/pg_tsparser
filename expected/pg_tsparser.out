CREATE EXTENSION pg_tsparser;
SELECT * FROM ts_token_type('tsparser');
 tokid |      alias      |                description                
-------+-----------------+-------------------------------------------
     1 | asciiword       | Word, all ASCII
     2 | word            | Word, all letters
     3 | numword         | Word, letters and digits
     4 | email           | Email address
     5 | url             | URL
     6 | host            | Host
     7 | sfloat          | Scientific notation
     8 | version         | Version number
     9 | hword_numpart   | Hyphenated word part, letters and digits
    10 | hword_part      | Hyphenated word part, all letters
    11 | hword_asciipart | Hyphenated word part, all ASCII
    12 | blank           | Space symbols
    13 | tag             | XML tag
    14 | protocol        | Protocol head
    15 | numhword        | Hyphenated word, letters and digits
    16 | asciihword      | Hyphenated word, all ASCII
    17 | hword           | Hyphenated word, all letters
    18 | url_path        | URL path
    19 | file            | File or path name
    20 | float           | Decimal notation
    21 | int             | Signed integer
    22 | uint            | Unsigned integer
    23 | entity          | XML entity
    24 | uword_numpart   | Underscored word part, letters and digits
    25 | uword_part      | Underscored word part, all letters
    26 | uword_asciipart | Underscored word part, all ASCII
    27 | numuword        | Underscored word, letters and digits
    28 | asciiuword      | Underscored word part, all ASCII
    29 | uword           | Underscored word part, all letters
(29 rows)

SELECT * FROM ts_parse('tsparser', '345 qwe@efd.r '' http://www.com/ http://aew.werc.ewr/?ad=qwe&dw 1aew.werc.ewr/?ad=qwe&dw 2aew.werc.ewr http://3aew.werc.ewr/?ad=qwe&dw http://4aew.werc.ewr http://5aew.werc.ewr:8100/?  ad=qwe&dw 6aew.werc.ewr:8100/?ad=qwe&dw 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32 +4.0e-10 qwe qwe qwqwe 234.435 455 5.005 teodor@stack.net teodor@123-stack.net 123_teodor@stack.net 123-teodor@stack.net qwe-wer asdf <fr>qwer jf sdjk<we hjwer <werrwe> ewr1> ewri2 <a href="qwe<qwe>">
/usr/local/fff /awdf/dwqe/4325 rewt/ewr wefjn /wqe-324/ewr gist.h gist.h.c gist.c. readline 4.2 4.2. 4.2, readline-4.2 readline-4.2. 234
<i <b> wow  < jqw <> qwerty');
 tokid |                token                 
-------+--------------------------------------
    22 | 345
    12 |  
     1 | qwe
    12 | @
    19 | efd.r
    12 |  ' 
    14 | http://
     6 | www.com
     1 | www
    12 | .
     1 | com
    12 | / 
    14 | http://
     5 | aew.werc.ewr/?ad=qwe&dw
     6 | aew.werc.ewr
    18 | /?ad=qwe&dw
    12 |  
     5 | 1aew.werc.ewr/?ad=qwe&dw
     6 | 1aew.werc.ewr
    18 | /?ad=qwe&dw
    12 |  
     6 | 2aew.werc.ewr
     3 | 2aew
    12 | .
     6 | werc.ewr
     1 | werc
    12 | .
     1 | ewr
    12 |  
    14 | http://
     5 | 3aew.werc.ewr/?ad=qwe&dw
     6 | 3aew.werc.ewr
    18 | /?ad=qwe&dw
    12 |  
    14 | http://
     6 | 4aew.werc.ewr
     3 | 4aew
    12 | .
     6 | werc.ewr
     1 | werc
    12 | .
     1 | ewr
    12 |  
    14 | http://
     5 | 5aew.werc.ewr:8100/?
     6 | 5aew.werc.ewr:8100
    18 | /?
    12 |   
     1 | ad
    12 | =
     1 | qwe
    12 | &
     1 | dw
    12 |  
     5 | 6aew.werc.ewr:8100/?ad=qwe&dw
     6 | 6aew.werc.ewr:8100
    18 | /?ad=qwe&dw
    12 |  
     5 | 7aew.werc.ewr:8100/?ad=qwe&dw=%20%32
     6 | 7aew.werc.ewr:8100
    18 | /?ad=qwe&dw=%20%32
    12 |  
     7 | +4.0e-10
    12 |  
     1 | qwe
    12 |  
     1 | qwe
    12 |  
     1 | qwqwe
    12 |  
    20 | 234.435
    12 |  
    22 | 455
    12 |  
    20 | 5.005
    12 |  
     4 | teodor@stack.net
    12 |  
     4 | teodor@123-stack.net
    12 |  
     4 | 123_teodor@stack.net
    12 |  
     4 | 123-teodor@stack.net
    12 |  
    16 | qwe-wer
    11 | qwe
    12 | -
    11 | wer
    12 |  
     1 | asdf
    12 |  
    13 | <fr>
     1 | qwer
    12 |  
     1 | jf
    12 |  
     1 | sdjk
    12 | <
     1 | we
    12 |  
     1 | hjwer
    12 |  
    13 | <werrwe>
    12 |  
     3 | ewr1
    12 | > 
     3 | ewri2
    12 |  
    13 | <a href="qwe<qwe>">
    12 |                                     +
       | 
    19 | /usr/local/fff
    12 |  
    19 | /awdf/dwqe/4325
    12 |  
    19 | rewt/ewr
    12 |  
     1 | wefjn
    12 |  
    19 | /wqe-324/ewr
    12 |  
    19 | gist.h
    12 |  
    19 | gist.h.c
    12 |  
    19 | gist.c
    12 | . 
     1 | readline
    12 |  
    20 | 4.2
    12 |  
    20 | 4.2
    12 | . 
    20 | 4.2
    12 | , 
    15 | readline-4.2
    11 | readline
    12 | -
     9 | 4.2
    12 |  
    15 | readline-4.2
    11 | readline
    12 | -
     9 | 4.2.
    12 |  
    22 | 234
    12 |                                     +
       | 
    12 | <
     1 | i
    12 |  
    13 | <b>
    12 |  
     1 | wow
    12 |   
    12 | < 
     1 | jqw
    12 |  
    12 | <> 
     1 | qwerty
(158 rows)

-- Test text search configuration with parser
CREATE TEXT SEARCH CONFIGURATION english_ts (
    PARSER = tsparser
);
ALTER TEXT SEARCH CONFIGURATION english_ts
    ADD MAPPING FOR
	numword,
		numhword, hword_numpart,
		numuword, uword_numpart,
	url, url_path, host, email,
	float, sfloat,
	int, uint,
	version,
	file
    WITH simple;
ALTER TEXT SEARCH CONFIGURATION english_ts
    ADD MAPPING FOR
	asciiword,
		asciihword, hword_asciipart,
		asciiuword, uword_asciipart,
    word,
		hword, hword_part,
		uword, uword_part
    WITH english_stem;
/* test urls */
SELECT to_tsvector('english_ts', 'test2.com');
           to_tsvector           
---------------------------------
 'com':3 'test2':2 'test2.com':1
(1 row)

SELECT * FROM ts_debug('english_ts', 'test.com');
   alias   |   description   |  token   |  dictionaries  |  dictionary  |  lexemes   
-----------+-----------------+----------+----------------+--------------+------------
 host      | Host            | test.com | {simple}       | simple       | {test.com}
 asciiword | Word, all ASCII | test     | {english_stem} | english_stem | {test}
 blank     | Space symbols   | .        | {}             |              | 
 asciiword | Word, all ASCII | com      | {english_stem} | english_stem | {com}
(4 rows)

/* test hyphens */
SELECT to_tsvector('english_ts', '12-abc, ill-posed');
                      to_tsvector                       
--------------------------------------------------------
 '12':2 '12-abc':1 'abc':3 'ill':5 'ill-pos':4 'pose':6
(1 row)

SELECT * FROM ts_debug('english_ts', 'pg-index, 12-pg, pg-12, 123-456, abc-def-egh');
      alias      |               description                |    token    |  dictionaries  |  dictionary  |    lexemes    
-----------------+------------------------------------------+-------------+----------------+--------------+---------------
 asciihword      | Hyphenated word, all ASCII               | pg-index    | {english_stem} | english_stem | {pg-index}
 hword_asciipart | Hyphenated word part, all ASCII          | pg          | {english_stem} | english_stem | {pg}
 blank           | Space symbols                            | -           | {}             |              | 
 hword_asciipart | Hyphenated word part, all ASCII          | index       | {english_stem} | english_stem | {index}
 blank           | Space symbols                            | ,           | {}             |              | 
 numhword        | Hyphenated word, letters and digits      | 12-pg       | {simple}       | simple       | {12-pg}
 hword_numpart   | Hyphenated word part, letters and digits | 12          | {simple}       | simple       | {12}
 blank           | Space symbols                            | -           | {}             |              | 
 hword_asciipart | Hyphenated word part, all ASCII          | pg          | {english_stem} | english_stem | {pg}
 blank           | Space symbols                            | ,           | {}             |              | 
 numhword        | Hyphenated word, letters and digits      | pg-12       | {simple}       | simple       | {pg-12}
 hword_asciipart | Hyphenated word part, all ASCII          | pg          | {english_stem} | english_stem | {pg}
 blank           | Space symbols                            | -           | {}             |              | 
 hword_numpart   | Hyphenated word part, letters and digits | 12          | {simple}       | simple       | {12}
 blank           | Space symbols                            | ,           | {}             |              | 
 numhword        | Hyphenated word, letters and digits      | 123-456     | {simple}       | simple       | {123-456}
 hword_numpart   | Hyphenated word part, letters and digits | 123         | {simple}       | simple       | {123}
 blank           | Space symbols                            | -           | {}             |              | 
 hword_numpart   | Hyphenated word part, letters and digits | 456         | {simple}       | simple       | {456}
 blank           | Space symbols                            | ,           | {}             |              | 
 asciihword      | Hyphenated word, all ASCII               | abc-def-egh | {english_stem} | english_stem | {abc-def-egh}
 hword_asciipart | Hyphenated word part, all ASCII          | abc         | {english_stem} | english_stem | {abc}
 blank           | Space symbols                            | -           | {}             |              | 
 hword_asciipart | Hyphenated word part, all ASCII          | def         | {english_stem} | english_stem | {def}
 blank           | Space symbols                            | -           | {}             |              | 
 hword_asciipart | Hyphenated word part, all ASCII          | egh         | {english_stem} | english_stem | {egh}
(26 rows)

/* test underscores */
SELECT to_tsvector('english_ts', '12_abc, pg_class');
                       to_tsvector                       
---------------------------------------------------------
 '12':2 '12_abc':1 'abc':3 'class':6 'pg':5 'pg_class':4
(1 row)

SELECT * FROM ts_debug('english_ts', 'pg_class, 12_pg, pg_12, 123_456, abc_def_egh');
      alias      |                description                |    token    |  dictionaries  |  dictionary  |    lexemes    
-----------------+-------------------------------------------+-------------+----------------+--------------+---------------
 asciiuword      | Underscored word part, all ASCII          | pg_class    | {english_stem} | english_stem | {pg_class}
 uword_asciipart | Underscored word part, all ASCII          | pg          | {english_stem} | english_stem | {pg}
 blank           | Space symbols                             | _           | {}             |              | 
 uword_asciipart | Underscored word part, all ASCII          | class       | {english_stem} | english_stem | {class}
 blank           | Space symbols                             | ,           | {}             |              | 
 numuword        | Underscored word, letters and digits      | 12_pg       | {simple}       | simple       | {12_pg}
 uword_numpart   | Underscored word part, letters and digits | 12          | {simple}       | simple       | {12}
 blank           | Space symbols                             | _           | {}             |              | 
 uword_asciipart | Underscored word part, all ASCII          | pg          | {english_stem} | english_stem | {pg}
 blank           | Space symbols                             | ,           | {}             |              | 
 numuword        | Underscored word, letters and digits      | pg_12       | {simple}       | simple       | {pg_12}
 uword_asciipart | Underscored word part, all ASCII          | pg          | {english_stem} | english_stem | {pg}
 blank           | Space symbols                             | _           | {}             |              | 
 uword_numpart   | Underscored word part, letters and digits | 12          | {simple}       | simple       | {12}
 blank           | Space symbols                             | ,           | {}             |              | 
 numuword        | Underscored word, letters and digits      | 123_456     | {simple}       | simple       | {123_456}
 uword_numpart   | Underscored word part, letters and digits | 123         | {simple}       | simple       | {123}
 blank           | Space symbols                             | _           | {}             |              | 
 uword_numpart   | Underscored word part, letters and digits | 456         | {simple}       | simple       | {456}
 blank           | Space symbols                             | ,           | {}             |              | 
 asciiuword      | Underscored word part, all ASCII          | abc_def_egh | {english_stem} | english_stem | {abc_def_egh}
 uword_asciipart | Underscored word part, all ASCII          | abc         | {english_stem} | english_stem | {abc}
 blank           | Space symbols                             | _           | {}             |              | 
 uword_asciipart | Underscored word part, all ASCII          | def         | {english_stem} | english_stem | {def}
 blank           | Space symbols                             | _           | {}             |              | 
 uword_asciipart | Underscored word part, all ASCII          | egh         | {english_stem} | english_stem | {egh}
(26 rows)

/* test combinations */
SELECT to_tsvector('english_ts', 'pg_class-oriented approach');
                        to_tsvector                        
-----------------------------------------------------------
 'approach':5 'class':3 'orient':4 'pg':2 'pg_class-ori':1
(1 row)

SELECT to_tsvector('english_ts', 'pg_class-oriented approach') @@ to_tsquery('english_ts', 'pg_class');
 ?column? 
----------
 f
(1 row)

SELECT to_tsvector('english_ts', 'pg_class-oriented approach') @@ to_tsquery('english_ts', 'pg_class-oriented');
 ?column? 
----------
 t
(1 row)

SELECT to_tsvector('english_ts', 'Those dark before-pg_class-was-invented ages');
                               to_tsvector                                
--------------------------------------------------------------------------
 'age':9 'before-pg_class-was-inv':3 'class':6 'dark':2 'invent':8 'pg':5
(1 row)

SELECT to_tsvector('english_ts', 'Those dark before-pg_class-was-invented ages') @@ to_tsquery('english_ts', 'pg_class');
 ?column? 
----------
 f
(1 row)

SELECT to_tsvector('english_ts', 'Those dark before-pg_class-was-invented ages') @@ to_tsquery('english_ts', 'before-pg_class');
 ?column? 
----------
 f
(1 row)

SELECT to_tsvector('english_ts', 'Those dark before-pg_class-was-invented ages') @@ to_tsquery('english_ts', 'before-pg_class-was-invented');
 ?column? 
----------
 t
(1 row)

/* full-featured test */
SELECT ts_headline('english_ts',
				   'I love pg_class, pg_index, pg-pool, pg and classes so much I _ cannot _ contain myself',
				   to_tsquery('english_ts', 'pg_class'),
				   'HighlightAll=true');
                                                    ts_headline                                                     
--------------------------------------------------------------------------------------------------------------------
 I love <b>pg_class</b>, pg_index, <b>pg</b>-pool, <b>pg</b> and <b>classes</b> so much I _ cannot _ contain myself
(1 row)

SELECT ts_headline('english_ts',
				   'This is a new pg_class-oriented kind of approach (also suitable for pg_index)',
				   to_tsquery('english_ts', 'pg_class'));
                                            ts_headline                                            
---------------------------------------------------------------------------------------------------
 This is a new <b>pg</b>_<b>class</b>-oriented kind of approach (also suitable for <b>pg</b>_index
(1 row)

SELECT ts_headline('english_ts',
				   'It''s hard to provide complete tests for pg_class, pg_index, pg-pool etc',
				   to_tsquery('english_ts', 'pg_class'),
				   'HighlightAll=false, MinWords=3, MaxWords=4');
        ts_headline        
---------------------------
 <b>pg_class</b>, pg_index
(1 row)

